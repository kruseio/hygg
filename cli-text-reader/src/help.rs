// Help text showing all available commands
pub fn get_help_text() -> Vec<String> {
  vec![
    "hygg - Document Reader with Vim-like Navigation".to_string(),
    "".to_string(),
    "NAVIGATION COMMANDS".to_string(),
    "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━".to_string(),
    "  Basic Movement:".to_string(),
    "    h, ←        Move left".to_string(),
    "    j, ↓        Move down".to_string(),
    "    k, ↑        Move up".to_string(),
    "    l, →        Move right".to_string(),
    "".to_string(),
    "  Line Navigation:".to_string(),
    "    0           Jump to start of line".to_string(),
    "    ^           Jump to first non-whitespace character".to_string(),
    "    $           Jump to end of line".to_string(),
    "".to_string(),
    "  Word Movement:".to_string(),
    "    w           Next word".to_string(),
    "    b           Previous word".to_string(),
    "    e           End of word".to_string(),
    "    W, B, E     Same but treat punctuation as part of words".to_string(),
    "".to_string(),
    "  Character Finding:".to_string(),
    "    f{char}     Find character forward".to_string(),
    "    F{char}     Find character backward".to_string(),
    "    t{char}     Till character forward (stop before)".to_string(),
    "    T{char}     Till character backward (stop after)".to_string(),
    "    ;           Repeat last f/F/t/T".to_string(),
    "    ,           Repeat last f/F/t/T in opposite direction".to_string(),
    "".to_string(),
    "  Page Navigation:".to_string(),
    "    PageDown    Scroll down one page".to_string(),
    "    PageUp      Scroll up one page".to_string(),
    "    Ctrl+D      Scroll down half page".to_string(),
    "    Ctrl+U      Scroll up half page".to_string(),
    "".to_string(),
    "  Document Navigation:".to_string(),
    "    gg          Jump to first line".to_string(),
    "    G           Jump to last line".to_string(),
    "    {number}G   Jump to line number".to_string(),
    "    {           Previous paragraph (blank line)".to_string(),
    "    }           Next paragraph (blank line)".to_string(),
    "    (           Previous sentence".to_string(),
    "    )           Next sentence".to_string(),
    "".to_string(),
    "  Screen Position:".to_string(),
    "    H           Move to top of screen".to_string(),
    "    M           Move to middle of screen".to_string(),
    "    L           Move to bottom of screen".to_string(),
    "    %           Jump to matching bracket/parenthesis".to_string(),
    "".to_string(),
    "SEARCH COMMANDS".to_string(),
    "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━".to_string(),
    "    /           Search forward".to_string(),
    "    ?           Search backward".to_string(),
    "    Ctrl+F      Search forward (same as /)".to_string(),
    "    n           Next search match".to_string(),
    "    N           Previous search match".to_string(),
    "    *           Search word under cursor forward".to_string(),
    "    #           Search word under cursor backward".to_string(),
    "".to_string(),
    "VISUAL MODE & SELECTION".to_string(),
    "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━".to_string(),
    "    v           Enter visual character mode".to_string(),
    "    V           Enter visual line mode".to_string(),
    "    Ctrl+A      Select all text".to_string(),
    "    y           Yank (copy) selection".to_string(),
    "    ESC         Exit visual mode".to_string(),
    "    Ctrl+C      Exit visual mode".to_string(),
    "    :           Enter command mode from visual mode".to_string(),
    "    gv          Restore last visual selection".to_string(),
    "".to_string(),
    "  Text Objects (in visual mode):".to_string(),
    "    iw          Inner word".to_string(),
    "    aw          Around word".to_string(),
    "    ip          Inner paragraph".to_string(),
    "    ap          Around paragraph".to_string(),
    "    is          Inner sentence".to_string(),
    "    as          Around sentence".to_string(),
    "    i{, i}      Inner braces".to_string(),
    "    a{, a}      Around braces".to_string(),
    "    i(, i)      Inner parentheses".to_string(),
    "    a(, a)      Around parentheses".to_string(),
    "    i[, i]      Inner brackets".to_string(),
    "    a[, a]      Around brackets".to_string(),
    "    i\", i'     Inner quotes".to_string(),
    "    a\", a'     Around quotes".to_string(),
    "".to_string(),
    "YANK (COPY) OPERATIONS".to_string(),
    "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━".to_string(),
    "    y           Yank (copy) selection in visual mode".to_string(),
    "    yy, Y       Yank current line".to_string(),
    "    yw          Yank word".to_string(),
    "    y{motion}   Yank with any motion".to_string(),
    "    viw         Select inner word (starts visual mode)".to_string(),
    "    viW         Select inner WORD (starts visual mode)".to_string(),
    "    vi{, vi}    Select inner braces (starts visual mode)".to_string(),
    "    vi(, vi)    Select inner parentheses (starts visual mode)".to_string(),
    "    vi[, vi]    Select inner brackets (starts visual mode)".to_string(),
    "    vi\", vi'    Select inner quotes (starts visual mode)".to_string(),
    "".to_string(),
    "BOOKMARKS".to_string(),
    "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━".to_string(),
    "    m{a-z}      Set bookmark (e.g., ma)".to_string(),
    "    '{a-z}      Jump to bookmark (e.g., 'a)".to_string(),
    "    ''          Jump to previous position".to_string(),
    "".to_string(),
    "COMMAND MODE".to_string(),
    "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━".to_string(),
    "    :           Enter command mode".to_string(),
    "".to_string(),
    "  Available Commands:".to_string(),
    "    :q, :q!, :quit, :exit  Quit".to_string(),
    "    :help, :commands       Show this help".to_string(),
    "    :tutorial              Start interactive tutorial".to_string(),
    "    :tutorial {n}          Jump to tutorial step n".to_string(),
    "    :tutorial on           Enable tutorial for next launch".to_string(),
    "    :tutorial off          Disable tutorial (same as :notutorial)"
      .to_string(),
    "    :notutorial            Permanently disable tutorial".to_string(),
    "    :next, :continue       Next tutorial step (when completed)"
      .to_string(),
    "    :back, :prev, :previous Previous tutorial step".to_string(),
    "    :z                     Toggle line highlighter".to_string(),
    "    :p                     Toggle progress display".to_string(),
    "    :cursor, :c            Toggle cursor visibility".to_string(),
    "    :h                     Highlight selected text (in visual mode)"
      .to_string(),
    "    :nohl, :nohlsearch     Clear search highlighting".to_string(),
    "    :credits, :author      Show credits".to_string(),
    "    :about                 Show about information".to_string(),
    "    :!{cmd}                Execute shell command (opens in split view)"
      .to_string(),
    "".to_string(),
    "  Split View Navigation:".to_string(),
    "    Alt+j       Switch to bottom pane".to_string(),
    "    Alt+k       Switch to top pane".to_string(),
    "    Ctrl+Space j    Switch to bottom pane (tmux-style)".to_string(),
    "    Ctrl+Space k    Switch to top pane (tmux-style)".to_string(),
    "    Ctrl+Space x    Close current pane (when in command output)"
      .to_string(),
    "    Ctrl+Space q    Show pane numbers (for debugging)".to_string(),
    "    :q          Close split (when in command output pane)".to_string(),
    "".to_string(),
    "  Command Line Editing:".to_string(),
    "    Ctrl+R 0    Paste yanked text".to_string(),
    "    Ctrl+V      Paste from system clipboard".to_string(),
    "    ←/→         Move cursor".to_string(),
    "    Home/End    Move to start/end".to_string(),
    "    Backspace   Delete character".to_string(),
    "".to_string(),
    "OTHER COMMANDS".to_string(),
    "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━".to_string(),
    "    Ctrl+C      Cancel operation / Close overlay".to_string(),
    "".to_string(),
    "SETTINGS".to_string(),
    "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━".to_string(),
    "  All settings are automatically saved to ~/.config/hygg/.env".to_string(),
    "  Bookmarks and highlights are saved per document.".to_string(),
    "".to_string(),
    "Press ':q' to close this help.".to_string(),
  ]
}
