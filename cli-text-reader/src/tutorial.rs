#[allow(dead_code)]
pub fn get_tutorial_text() -> Vec<String> {
  vec![
    "Welcome to hygg!".to_string(),
    "".to_string(),
    "Basic Navigation:".to_string(),
    "h or ← = move cursor left".to_string(),
    "j or ↓ = move cursor down".to_string(),
    "k or ↑ = move cursor up".to_string(),
    "l or → = move cursor right".to_string(),
    "0 = jump to start of line".to_string(),
    "^ = jump to first non-whitespace character".to_string(),
    "$ = jump to end of line".to_string(),
    "".to_string(),
    "Page Navigation:".to_string(),
    "PageDown = scroll down one page".to_string(),
    "PageUp = scroll up one page".to_string(),
    "Ctrl+D = scroll down half page".to_string(),
    "Ctrl+U = scroll up half page".to_string(),
    "gg = go to first line".to_string(),
    "G = go to last line".to_string(),
    "".to_string(),
    "Word Movement:".to_string(),
    "w = move to next word".to_string(),
    "W = move to next big word".to_string(),
    "e = move to end of word".to_string(),
    "E = move to end of big word".to_string(),
    "b = move to previous word".to_string(),
    "B = move to previous big word".to_string(),
    "".to_string(),
    "Character Find (on current line):".to_string(),
    "f{char} = find character forward".to_string(),
    "F{char} = find character backward".to_string(),
    "t{char} = till character forward (stop before)".to_string(),
    "T{char} = till character backward (stop after)".to_string(),
    "".to_string(),
    "Search:".to_string(),
    "/ = search forward".to_string(),
    "? = search backward".to_string(),
    "n = next match".to_string(),
    "N = previous match".to_string(),
    "* = search word under cursor forward".to_string(),
    "# = search word under cursor backward".to_string(),
    "".to_string(),
    "Reading Navigation:".to_string(),
    "{ = previous paragraph (blank line)".to_string(),
    "} = next paragraph (blank line)".to_string(),
    "( = previous sentence".to_string(),
    ") = next sentence".to_string(),
    "".to_string(),
    "Screen Position:".to_string(),
    "H = move to top of screen".to_string(),
    "M = move to middle of screen".to_string(),
    "L = move to bottom of screen".to_string(),
    "".to_string(),
    "Line Numbers:".to_string(),
    "{number}G = go to specific line (e.g., 50G)".to_string(),
    "".to_string(),
    "Bookmarks (persistent per book):".to_string(),
    "m{a-z} = set bookmark (e.g., ma, mb, mc)".to_string(),
    "'{a-z} = jump to bookmark (e.g., 'a, 'b, 'c)".to_string(),
    "'' = jump to previous position".to_string(),
    "".to_string(),
    "Special Navigation:".to_string(),
    "% = jump to matching bracket/parenthesis".to_string(),
    "".to_string(),
    "Visual Mode:".to_string(),
    "v = enter visual character mode".to_string(),
    "V or Shift+V = enter visual line mode".to_string(),
    "gv = restore last visual selection".to_string(),
    "Esc = exit visual mode".to_string(),
    "".to_string(),
    "Visual Mode Navigation:".to_string(),
    "All normal mode movements work in visual mode".to_string(),
    "f{char} = extend selection to next character".to_string(),
    "F{char} = extend selection to previous character".to_string(),
    "t{char} = extend selection till next character".to_string(),
    "T{char} = extend selection till previous character".to_string(),
    "".to_string(),
    "Text Objects (in visual mode):".to_string(),
    "vi{ or vi} = select inner braces".to_string(),
    "va{ or va} = select around braces".to_string(),
    "vi( or vi) = select inner parentheses".to_string(),
    "va( or va) = select around parentheses".to_string(),
    "vi[ or vi] = select inner brackets".to_string(),
    "va[ or va] = select around brackets".to_string(),
    "vi\" = select inner double quotes".to_string(),
    "va\" = select around double quotes".to_string(),
    "vi' = select inner single quotes".to_string(),
    "va' = select around single quotes".to_string(),
    "vip = select inner paragraph".to_string(),
    "vap = select around paragraph".to_string(),
    "vis = select inner sentence".to_string(),
    "vas = select around sentence".to_string(),
    "viw = select inner word".to_string(),
    "vaw = select around word (not implemented)".to_string(),
    "".to_string(),
    "Copy/Yank Operations:".to_string(),
    "yy = yank (copy) current line".to_string(),
    "Y = yank current line (same as yy)".to_string(),
    "yw = yank word".to_string(),
    "y = start yank operation (wait for motion)".to_string(),
    "y (in visual mode) = yank selection".to_string(),
    "".to_string(),
    "Commands (type : first):".to_string(),
    "q = quit".to_string(),
    "h = highlight/unhighlight selected text (persistent per book)".to_string(),
    "z = toggle line highlighter (saves to config)".to_string(),
    "p = toggle progress display (saves to config)".to_string(),
    "c or cursor = toggle cursor visibility (saves to config)".to_string(),
    "help or tutorial = show this tutorial".to_string(),
    "!<command> = execute shell command".to_string(),
    "".to_string(),
    "Highlighting:".to_string(),
    "1. Select text in visual mode (v or V)".to_string(),
    "2. Type :h to highlight the selection".to_string(),
    "3. Highlights persist per book (yellow background)".to_string(),
    "4. Select highlighted text and :h to unhighlight".to_string(),
    "".to_string(),
    "Command Mode Editing:".to_string(),
    "Ctrl+R 0 = paste yanked text in command line".to_string(),
    "Ctrl+V = paste system clipboard in command line".to_string(),
    "← → = move cursor in command line".to_string(),
    "Home/End = move to start/end of command line".to_string(),
    "Backspace/Delete = edit command".to_string(),
    "".to_string(),
    "Special Keys:".to_string(),
    "Esc = exit current mode/cancel operation".to_string(),
    "Ctrl+C = cancel operation/close overlay".to_string(),
    "Enter = execute command/search".to_string(),
    "".to_string(),
    "Settings:".to_string(),
    "All display settings are automatically saved".to_string(),
    "to ~/.config/hygg/.env and persist between sessions".to_string(),
    "".to_string(),
    "Press any key to continue...".to_string(),
  ]
}
